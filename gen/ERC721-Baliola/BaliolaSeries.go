// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package BaliolaSeries

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BaliolaSeriesMetaData contains all meta data concerning the BaliolaSeries contract.
var BaliolaSeriesMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"URI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b5060405162005ad938038062005ad983398181016040528101906200003791906200055b565b818181600290816200004a91906200082b565b5080600390816200005c91906200082b565b5050506000600c60006101000a81548160ff0219169083151502179055506200009e6000801b620000926200012860201b60201c565b6200013060201b60201c565b620000df7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000d36200012860201b60201c565b6200013060201b60201c565b620001207f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620001146200012860201b60201c565b6200013060201b60201c565b505062000912565b600033905090565b6200014282826200014660201b60201c565b5050565b6200015d82826200018e60201b620013751760201c565b6200018981600160008581526020019081526020016000206200027f60201b620014551790919060201c565b505050565b620001a08282620002b760201b60201c565b6200027b57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002206200012860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002af836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200032160201b60201c565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006200033583836200039b60201b60201c565b6200039057826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000395565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200042782620003dc565b810181811067ffffffffffffffff82111715620004495762000448620003ed565b5b80604052505050565b60006200045e620003be565b90506200046c82826200041c565b919050565b600067ffffffffffffffff8211156200048f576200048e620003ed565b5b6200049a82620003dc565b9050602081019050919050565b60005b83811015620004c7578082015181840152602081019050620004aa565b83811115620004d7576000848401525b50505050565b6000620004f4620004ee8462000471565b62000452565b905082815260208101848484011115620005135762000512620003d7565b5b62000520848285620004a7565b509392505050565b600082601f83011262000540576200053f620003d2565b5b815162000552848260208601620004dd565b91505092915050565b60008060408385031215620005755762000574620003c8565b5b600083015167ffffffffffffffff811115620005965762000595620003cd565b5b620005a48582860162000528565b925050602083015167ffffffffffffffff811115620005c857620005c7620003cd565b5b620005d68582860162000528565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200063357607f821691505b602082108103620006495762000648620005eb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000674565b620006bf868362000674565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200070c620007066200070084620006d7565b620006e1565b620006d7565b9050919050565b6000819050919050565b6200072883620006eb565b62000740620007378262000713565b84845462000681565b825550505050565b600090565b6200075762000748565b620007648184846200071d565b505050565b5b818110156200078c57620007806000826200074d565b6001810190506200076a565b5050565b601f821115620007db57620007a5816200064f565b620007b08462000664565b81016020851015620007c0578190505b620007d8620007cf8562000664565b83018262000769565b50505b505050565b600082821c905092915050565b60006200080060001984600802620007e0565b1980831691505092915050565b60006200081b8383620007ed565b9150826002028217905092915050565b6200083682620005e0565b67ffffffffffffffff811115620008525762000851620003ed565b5b6200085e82546200061a565b6200086b82828562000790565b600060209050601f831160018114620008a357600084156200088e578287015190505b6200089a85826200080d565b8655506200090a565b601f198416620008b3866200064f565b60005b82811015620008dd57848901518255600182019150602085019450602081019050620008b6565b86831015620008fd5784890151620008f9601f891682620007ed565b8355505b6001600288020188555050505b505050505050565b6151b780620009226000396000f3fe6080604052600436106101ee5760003560e01c80635c975abb1161010d578063a217fddf116100a0578063ca15c8731161006f578063ca15c87314610712578063d53913931461074f578063d547741f1461077a578063e63ab1e9146107a3578063e985e9c5146107ce576101ee565b8063a217fddf14610658578063a22cb46514610683578063b88d4fde146106ac578063c87b56dd146106d5576101ee565b80638456cb59116100dc5780638456cb591461059c5780639010d07c146105b357806391d14854146105f057806395d89b411461062d576101ee565b80635c975abb146104cc5780636352211e146104f75780636817c76c1461053457806370a082311461055f576101ee565b8063248a9ca3116101855780633f4ba83a116101545780633f4ba83a1461042657806342842e0e1461043d57806342966c68146104665780634f6ccce71461048f576101ee565b8063248a9ca31461035a5780632f2ff15d146103975780632f745c59146103c057806336568abe146103fd576101ee565b8063162094c4116101c1578063162094c4146102c157806318160ddd146102ea5780631c351a9d1461031557806323b872dd14610331576101ee565b806301ffc9a7146101f357806306fdde0314610230578063081812fc1461025b578063095ea7b314610298575b600080fd5b3480156101ff57600080fd5b5061021a600480360381019061021591906133dc565b61080b565b6040516102279190613424565b60405180910390f35b34801561023c57600080fd5b5061024561081d565b60405161025291906134d8565b60405180910390f35b34801561026757600080fd5b50610282600480360381019061027d9190613530565b6108af565b60405161028f919061359e565b60405180910390f35b3480156102a457600080fd5b506102bf60048036038101906102ba91906135e5565b610934565b005b3480156102cd57600080fd5b506102e860048036038101906102e3919061375a565b610a4b565b005b3480156102f657600080fd5b506102ff610ac9565b60405161030c91906137c5565b60405180910390f35b61032f600480360381019061032a91906137e0565b610ad6565b005b34801561033d57600080fd5b506103586004803603810190610353919061383c565b610b6b565b005b34801561036657600080fd5b50610381600480360381019061037c91906138c5565b610bcb565b60405161038e9190613901565b60405180910390f35b3480156103a357600080fd5b506103be60048036038101906103b9919061391c565b610bea565b005b3480156103cc57600080fd5b506103e760048036038101906103e291906135e5565b610c0b565b6040516103f491906137c5565b60405180910390f35b34801561040957600080fd5b50610424600480360381019061041f919061391c565b610cb0565b005b34801561043257600080fd5b5061043b610d33565b005b34801561044957600080fd5b50610464600480360381019061045f919061383c565b610dad565b005b34801561047257600080fd5b5061048d60048036038101906104889190613530565b610dcd565b005b34801561049b57600080fd5b506104b660048036038101906104b19190613530565b610e29565b6040516104c391906137c5565b60405180910390f35b3480156104d857600080fd5b506104e1610e9a565b6040516104ee9190613424565b60405180910390f35b34801561050357600080fd5b5061051e60048036038101906105199190613530565b610eb1565b60405161052b919061359e565b60405180910390f35b34801561054057600080fd5b50610549610f62565b60405161055691906137c5565b60405180910390f35b34801561056b57600080fd5b506105866004803603810190610581919061395c565b610f67565b60405161059391906137c5565b60405180910390f35b3480156105a857600080fd5b506105b161101e565b005b3480156105bf57600080fd5b506105da60048036038101906105d59190613989565b611098565b6040516105e7919061359e565b60405180910390f35b3480156105fc57600080fd5b506106176004803603810190610612919061391c565b6110c7565b6040516106249190613424565b60405180910390f35b34801561063957600080fd5b50610642611131565b60405161064f91906134d8565b60405180910390f35b34801561066457600080fd5b5061066d6111c3565b60405161067a9190613901565b60405180910390f35b34801561068f57600080fd5b506106aa60048036038101906106a591906139f5565b6111ca565b005b3480156106b857600080fd5b506106d360048036038101906106ce9190613ad6565b6111e0565b005b3480156106e157600080fd5b506106fc60048036038101906106f79190613530565b611242565b60405161070991906134d8565b60405180910390f35b34801561071e57600080fd5b50610739600480360381019061073491906138c5565b611254565b60405161074691906137c5565b60405180910390f35b34801561075b57600080fd5b50610764611278565b6040516107719190613901565b60405180910390f35b34801561078657600080fd5b506107a1600480360381019061079c919061391c565b61129c565b005b3480156107af57600080fd5b506107b86112bd565b6040516107c59190613901565b60405180910390f35b3480156107da57600080fd5b506107f560048036038101906107f09190613b59565b6112e1565b6040516108029190613424565b60405180910390f35b600061081682611485565b9050919050565b60606002805461082c90613bc8565b80601f016020809104026020016040519081016040528092919081815260200182805461085890613bc8565b80156108a55780601f1061087a576101008083540402835291602001916108a5565b820191906000526020600020905b81548152906001019060200180831161088857829003601f168201915b5050505050905090565b60006108ba826114ff565b6108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f090613c6b565b60405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061093f82610eb1565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a690613cfd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109ce61156b565b73ffffffffffffffffffffffffffffffffffffffff1614806109fd57506109fc816109f761156b565b6112e1565b5b610a3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3390613d8f565b60405180910390fd5b610a468383611573565b505050565b610a7c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610a7761156b565b6110c7565b610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab290613e21565b60405180910390fd5b610ac5828261162c565b5050565b6000600a80549050905090565b610b077f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610b0261156b565b6110c7565b610b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3d90613e21565b60405180910390fd5b6000610b50610ac9565b9050610b5c8282611699565b610b66818461162c565b505050565b610b7c610b7661156b565b826116b7565b610bbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb290613eb3565b60405180910390fd5b610bc6838383611795565b505050565b6000806000838152602001908152602001600020600101549050919050565b610bf382610bcb565b610bfc816119fb565b610c068383611a0f565b505050565b6000610c1683610f67565b8210610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e90613f45565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610cb861156b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1c90613fd7565b60405180910390fd5b610d2f8282611a43565b5050565b610d647f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610d5f61156b565b6110c7565b610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a90614069565b60405180910390fd5b610dab611a77565b565b610dc8838383604051806020016040528060008152506111e0565b505050565b610dde610dd861156b565b826116b7565b610e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e14906140fb565b60405180910390fd5b610e2681611b19565b50565b6000610e33610ac9565b8210610e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6b9061418d565b60405180910390fd5b600a8281548110610e8857610e876141ad565b5b90600052602060002001549050919050565b6000600c60009054906101000a900460ff16905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f509061424e565b60405180910390fd5b80915050919050565b600081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fce906142e0565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61104f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61104a61156b565b6110c7565b61108e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108590614372565b60405180910390fd5b611096611b25565b565b60006110bf8260016000868152602001908152602001600020611bc890919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606003805461114090613bc8565b80601f016020809104026020016040519081016040528092919081815260200182805461116c90613bc8565b80156111b95780601f1061118e576101008083540402835291602001916111b9565b820191906000526020600020905b81548152906001019060200180831161119c57829003601f168201915b5050505050905090565b6000801b81565b6111dc6111d561156b565b8383611be2565b5050565b6111f16111eb61156b565b836116b7565b611230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122790613eb3565b60405180910390fd5b61123c84848484611d4e565b50505050565b606061124d82611daa565b9050919050565b600061127160016000848152602001908152602001600020611efb565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6112a582610bcb565b6112ae816119fb565b6112b88383611a43565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61137f82826110c7565b61145157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506113f661156b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600061147d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611f10565b905092915050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114f857506114f782611f80565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166115e683610eb1565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b611635826114ff565b611674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166b90614404565b60405180910390fd5b80600d6000848152602001908152602001600020908161169491906145d0565b505050565b6116b3828260405180602001604052806000815250612062565b5050565b60006116c2826114ff565b611701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f890614714565b60405180910390fd5b600061170c83610eb1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061177b57508373ffffffffffffffffffffffffffffffffffffffff16611763846108af565b73ffffffffffffffffffffffffffffffffffffffff16145b8061178c575061178b81856112e1565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166117b582610eb1565b73ffffffffffffffffffffffffffffffffffffffff161461180b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611802906147a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361187a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187190614838565b60405180910390fd5b6118858383836120bd565b611890600082611573565b6001600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118e09190614887565b925050819055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461193791906148bb565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119f68383836120cd565b505050565b611a0c81611a0761156b565b6120d2565b50565b611a198282611375565b611a3e816001600085815260200190815260200160002061145590919063ffffffff16565b505050565b611a4d828261216f565b611a72816001600085815260200190815260200160002061225090919063ffffffff16565b505050565b611a7f610e9a565b611abe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab59061495d565b60405180910390fd5b6000600c60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611b0261156b565b604051611b0f919061359e565b60405180910390a1565b611b2281612280565b50565b611b2d610e9a565b15611b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b64906149c9565b60405180910390fd5b6001600c60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611bb161156b565b604051611bbe919061359e565b60405180910390a1565b6000611bd783600001836122d3565b60001c905092915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4790614a35565b60405180910390fd5b80600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d419190613424565b60405180910390a3505050565b611d59848484611795565b611d65848484846122fe565b611da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9b90614ac7565b60405180910390fd5b50505050565b6060611db5826114ff565b611df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611deb90614b59565b60405180910390fd5b6000600d60008481526020019081526020016000208054611e1490613bc8565b80601f0160208091040260200160405190810160405280929190818152602001828054611e4090613bc8565b8015611e8d5780601f10611e6257610100808354040283529160200191611e8d565b820191906000526020600020905b815481529060010190602001808311611e7057829003601f168201915b505050505090506000611e9e612485565b90506000815103611eb3578192505050611ef6565b600082511115611ee8578082604051602001611ed0929190614bb5565b60405160208183030381529060405292505050611ef6565b611ef18461249c565b925050505b919050565b6000611f0982600001612543565b9050919050565b6000611f1c8383612554565b611f75578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611f7a565b600090505b92915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061204b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061205b575061205a82612577565b5b9050919050565b61206c83836125f1565b61207960008484846122fe565b6120b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120af90614ac7565b60405180910390fd5b505050565b6120c88383836127ca565b505050565b505050565b6120dc82826110c7565b61216b576121018173ffffffffffffffffffffffffffffffffffffffff166014612822565b61210f8360001c6020612822565b604051602001612120929190614c71565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216291906134d8565b60405180910390fd5b5050565b61217982826110c7565b1561224c57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506121f161156b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000612278836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612a5e565b905092915050565b61228981612b72565b6000600d600083815260200190815260200160002080546122a990613bc8565b9050146122d057600d600082815260200190815260200160002060006122cf9190613313565b5b50565b60008260000182815481106122eb576122ea6141ad565b5b9060005260206000200154905092915050565b600061231f8473ffffffffffffffffffffffffffffffffffffffff16612c8f565b15612478578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261234861156b565b8786866040518563ffffffff1660e01b815260040161236a9493929190614d00565b6020604051808303816000875af19250505080156123a657506040513d601f19601f820116820180604052508101906123a39190614d61565b60015b612428573d80600081146123d6576040519150601f19603f3d011682016040523d82523d6000602084013e6123db565b606091505b506000815103612420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241790614ac7565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061247d565b600190505b949350505050565b606060405180602001604052806000815250905090565b60606124a7826114ff565b6124e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124dd90614e00565b60405180910390fd5b60006124f0612485565b90506000815111612510576040518060200160405280600081525061253b565b8061251a84612cb2565b60405160200161252b929190614bb5565b6040516020818303038152906040525b915050919050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806125ea57506125e982612e12565b5b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161265790614e6c565b60405180910390fd5b612669816114ff565b156126a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126a090614ed8565b60405180910390fd5b6126b5600083836120bd565b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461270591906148bb565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46127c6600083836120cd565b5050565b6127d5838383612e8c565b6127dd610e9a565b1561281d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161281490614f6a565b60405180910390fd5b505050565b6060600060028360026128359190614f8a565b61283f91906148bb565b67ffffffffffffffff8111156128585761285761362f565b5b6040519080825280601f01601f19166020018201604052801561288a5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106128c2576128c16141ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612926576129256141ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026129669190614f8a565b61297091906148bb565b90505b6001811115612a10577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106129b2576129b16141ad565b5b1a60f81b8282815181106129c9576129c86141ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612a0990614fe4565b9050612973565b5060008414612a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a4b90615059565b60405180910390fd5b8091505092915050565b60008083600101600084815260200190815260200160002054905060008114612b66576000600182612a909190614887565b9050600060018660000180549050612aa89190614887565b9050818114612b17576000866000018281548110612ac957612ac86141ad565b5b9060005260206000200154905080876000018481548110612aed57612aec6141ad565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480612b2b57612b2a615079565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612b6c565b60009150505b92915050565b6000612b7d82610eb1565b9050612b8b816000846120bd565b612b96600083611573565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612be69190614887565b925050819055506004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4612c8b816000846120cd565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606060008203612cf9576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612e0d565b600082905060005b60008214612d2b578080612d14906150a8565b915050600a82612d24919061511f565b9150612d01565b60008167ffffffffffffffff811115612d4757612d4661362f565b5b6040519080825280601f01601f191660200182016040528015612d795781602001600182028036833780820191505090505b5090505b60008514612e0657600182612d929190614887565b9150600a85612da19190615150565b6030612dad91906148bb565b60f81b818381518110612dc357612dc26141ad565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85612dff919061511f565b9450612d7d565b8093505050505b919050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e855750612e8482612f9e565b5b9050919050565b612e97838383613008565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612ed957612ed48161300d565b612f18565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612f1757612f168382613056565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612f5a57612f55816131c3565b612f99565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612f9857612f978282613294565b5b5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000600161306384610f67565b61306d9190614887565b9050600060096000848152602001908152602001600020549050818114613152576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816009600083815260200190815260200160002081905550505b6009600084815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600a805490506131d79190614887565b90506000600b60008481526020019081526020016000205490506000600a8381548110613207576132066141ad565b5b9060005260206000200154905080600a8381548110613229576132286141ad565b5b906000526020600020018190555081600b600083815260200190815260200160002081905550600b600085815260200190815260200160002060009055600a80548061327857613277615079565b5b6001900381819060005260206000200160009055905550505050565b600061329f83610f67565b905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806009600084815260200190815260200160002081905550505050565b50805461331f90613bc8565b6000825580601f106133315750613350565b601f01602090049060005260206000209081019061334f9190613353565b5b50565b5b8082111561336c576000816000905550600101613354565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6133b981613384565b81146133c457600080fd5b50565b6000813590506133d6816133b0565b92915050565b6000602082840312156133f2576133f161337a565b5b6000613400848285016133c7565b91505092915050565b60008115159050919050565b61341e81613409565b82525050565b60006020820190506134396000830184613415565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561347957808201518184015260208101905061345e565b83811115613488576000848401525b50505050565b6000601f19601f8301169050919050565b60006134aa8261343f565b6134b4818561344a565b93506134c481856020860161345b565b6134cd8161348e565b840191505092915050565b600060208201905081810360008301526134f2818461349f565b905092915050565b6000819050919050565b61350d816134fa565b811461351857600080fd5b50565b60008135905061352a81613504565b92915050565b6000602082840312156135465761354561337a565b5b60006135548482850161351b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006135888261355d565b9050919050565b6135988161357d565b82525050565b60006020820190506135b3600083018461358f565b92915050565b6135c28161357d565b81146135cd57600080fd5b50565b6000813590506135df816135b9565b92915050565b600080604083850312156135fc576135fb61337a565b5b600061360a858286016135d0565b925050602061361b8582860161351b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6136678261348e565b810181811067ffffffffffffffff821117156136865761368561362f565b5b80604052505050565b6000613699613370565b90506136a5828261365e565b919050565b600067ffffffffffffffff8211156136c5576136c461362f565b5b6136ce8261348e565b9050602081019050919050565b82818337600083830152505050565b60006136fd6136f8846136aa565b61368f565b9050828152602081018484840111156137195761371861362a565b5b6137248482856136db565b509392505050565b600082601f83011261374157613740613625565b5b81356137518482602086016136ea565b91505092915050565b600080604083850312156137715761377061337a565b5b600061377f8582860161351b565b925050602083013567ffffffffffffffff8111156137a05761379f61337f565b5b6137ac8582860161372c565b9150509250929050565b6137bf816134fa565b82525050565b60006020820190506137da60008301846137b6565b92915050565b600080604083850312156137f7576137f661337a565b5b600083013567ffffffffffffffff8111156138155761381461337f565b5b6138218582860161372c565b9250506020613832858286016135d0565b9150509250929050565b6000806000606084860312156138555761385461337a565b5b6000613863868287016135d0565b9350506020613874868287016135d0565b92505060406138858682870161351b565b9150509250925092565b6000819050919050565b6138a28161388f565b81146138ad57600080fd5b50565b6000813590506138bf81613899565b92915050565b6000602082840312156138db576138da61337a565b5b60006138e9848285016138b0565b91505092915050565b6138fb8161388f565b82525050565b600060208201905061391660008301846138f2565b92915050565b600080604083850312156139335761393261337a565b5b6000613941858286016138b0565b9250506020613952858286016135d0565b9150509250929050565b6000602082840312156139725761397161337a565b5b6000613980848285016135d0565b91505092915050565b600080604083850312156139a05761399f61337a565b5b60006139ae858286016138b0565b92505060206139bf8582860161351b565b9150509250929050565b6139d281613409565b81146139dd57600080fd5b50565b6000813590506139ef816139c9565b92915050565b60008060408385031215613a0c57613a0b61337a565b5b6000613a1a858286016135d0565b9250506020613a2b858286016139e0565b9150509250929050565b600067ffffffffffffffff821115613a5057613a4f61362f565b5b613a598261348e565b9050602081019050919050565b6000613a79613a7484613a35565b61368f565b905082815260208101848484011115613a9557613a9461362a565b5b613aa08482856136db565b509392505050565b600082601f830112613abd57613abc613625565b5b8135613acd848260208601613a66565b91505092915050565b60008060008060808587031215613af057613aef61337a565b5b6000613afe878288016135d0565b9450506020613b0f878288016135d0565b9350506040613b208782880161351b565b925050606085013567ffffffffffffffff811115613b4157613b4061337f565b5b613b4d87828801613aa8565b91505092959194509250565b60008060408385031215613b7057613b6f61337a565b5b6000613b7e858286016135d0565b9250506020613b8f858286016135d0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613be057607f821691505b602082108103613bf357613bf2613b99565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000613c55602c8361344a565b9150613c6082613bf9565b604082019050919050565b60006020820190508181036000830152613c8481613c48565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000613ce760218361344a565b9150613cf282613c8b565b604082019050919050565b60006020820190508181036000830152613d1681613cda565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000613d7960388361344a565b9150613d8482613d1d565b604082019050919050565b60006020820190508181036000830152613da881613d6c565b9050919050565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d7573742068617665206d696e74657220726f6c6520746f206d696e74000000602082015250565b6000613e0b603d8361344a565b9150613e1682613daf565b604082019050919050565b60006020820190508181036000830152613e3a81613dfe565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000613e9d60318361344a565b9150613ea882613e41565b604082019050919050565b60006020820190508181036000830152613ecc81613e90565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000613f2f602b8361344a565b9150613f3a82613ed3565b604082019050919050565b60006020820190508181036000830152613f5e81613f22565b9050919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000613fc1602f8361344a565b9150613fcc82613f65565b604082019050919050565b60006020820190508181036000830152613ff081613fb4565b9050919050565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d75737420686176652070617573657220726f6c6520746f20756e7061757365602082015250565b600061405360408361344a565b915061405e82613ff7565b604082019050919050565b6000602082019050818103600083015261408281614046565b9050919050565b7f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656400000000000000000000000000000000602082015250565b60006140e560308361344a565b91506140f082614089565b604082019050919050565b60006020820190508181036000830152614114816140d8565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b6000614177602c8361344a565b91506141828261411b565b604082019050919050565b600060208201905081810360008301526141a68161416a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b600061423860298361344a565b9150614243826141dc565b604082019050919050565b600060208201905081810360008301526142678161422b565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006142ca602a8361344a565b91506142d58261426e565b604082019050919050565b600060208201905081810360008301526142f9816142bd565b9050919050565b7f4552433732315072657365744d696e7465725061757365724175746f49643a2060008201527f6d75737420686176652070617573657220726f6c6520746f2070617573650000602082015250565b600061435c603e8361344a565b915061436782614300565b604082019050919050565b6000602082019050818103600083015261438b8161434f565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b60006143ee602e8361344a565b91506143f982614392565b604082019050919050565b6000602082019050818103600083015261441d816143e1565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026144867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614449565b6144908683614449565b95508019841693508086168417925050509392505050565b6000819050919050565b60006144cd6144c86144c3846134fa565b6144a8565b6134fa565b9050919050565b6000819050919050565b6144e7836144b2565b6144fb6144f3826144d4565b848454614456565b825550505050565b600090565b614510614503565b61451b8184846144de565b505050565b5b8181101561453f57614534600082614508565b600181019050614521565b5050565b601f8211156145845761455581614424565b61455e84614439565b8101602085101561456d578190505b61458161457985614439565b830182614520565b50505b505050565b600082821c905092915050565b60006145a760001984600802614589565b1980831691505092915050565b60006145c08383614596565b9150826002028217905092915050565b6145d98261343f565b67ffffffffffffffff8111156145f2576145f161362f565b5b6145fc8254613bc8565b614607828285614543565b600060209050601f83116001811461463a5760008415614628578287015190505b61463285826145b4565b86555061469a565b601f19841661464886614424565b60005b828110156146705784890151825560018201915060208501945060208101905061464b565b8683101561468d5784890151614689601f891682614596565b8355505b6001600288020188555050505b505050505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b60006146fe602c8361344a565b9150614709826146a2565b604082019050919050565b6000602082019050818103600083015261472d816146f1565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061479060258361344a565b915061479b82614734565b604082019050919050565b600060208201905081810360008301526147bf81614783565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061482260248361344a565b915061482d826147c6565b604082019050919050565b6000602082019050818103600083015261485181614815565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614892826134fa565b915061489d836134fa565b9250828210156148b0576148af614858565b5b828203905092915050565b60006148c6826134fa565b91506148d1836134fa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561490657614905614858565b5b828201905092915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b600061494760148361344a565b915061495282614911565b602082019050919050565b600060208201905081810360008301526149768161493a565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006149b360108361344a565b91506149be8261497d565b602082019050919050565b600060208201905081810360008301526149e2816149a6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000614a1f60198361344a565b9150614a2a826149e9565b602082019050919050565b60006020820190508181036000830152614a4e81614a12565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000614ab160328361344a565b9150614abc82614a55565b604082019050919050565b60006020820190508181036000830152614ae081614aa4565b9050919050565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b6000614b4360318361344a565b9150614b4e82614ae7565b604082019050919050565b60006020820190508181036000830152614b7281614b36565b9050919050565b600081905092915050565b6000614b8f8261343f565b614b998185614b79565b9350614ba981856020860161345b565b80840191505092915050565b6000614bc18285614b84565b9150614bcd8284614b84565b91508190509392505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000614c0f601783614b79565b9150614c1a82614bd9565b601782019050919050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000614c5b601183614b79565b9150614c6682614c25565b601182019050919050565b6000614c7c82614c02565b9150614c888285614b84565b9150614c9382614c4e565b9150614c9f8284614b84565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000614cd282614cab565b614cdc8185614cb6565b9350614cec81856020860161345b565b614cf58161348e565b840191505092915050565b6000608082019050614d15600083018761358f565b614d22602083018661358f565b614d2f60408301856137b6565b8181036060830152614d418184614cc7565b905095945050505050565b600081519050614d5b816133b0565b92915050565b600060208284031215614d7757614d7661337a565b5b6000614d8584828501614d4c565b91505092915050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000614dea602f8361344a565b9150614df582614d8e565b604082019050919050565b60006020820190508181036000830152614e1981614ddd565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000614e5660208361344a565b9150614e6182614e20565b602082019050919050565b60006020820190508181036000830152614e8581614e49565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000614ec2601c8361344a565b9150614ecd82614e8c565b602082019050919050565b60006020820190508181036000830152614ef181614eb5565b9050919050565b7f4552433732315061757361626c653a20746f6b656e207472616e73666572207760008201527f68696c6520706175736564000000000000000000000000000000000000000000602082015250565b6000614f54602b8361344a565b9150614f5f82614ef8565b604082019050919050565b60006020820190508181036000830152614f8381614f47565b9050919050565b6000614f95826134fa565b9150614fa0836134fa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614fd957614fd8614858565b5b828202905092915050565b6000614fef826134fa565b91506000820361500257615001614858565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061504360208361344a565b915061504e8261500d565b602082019050919050565b6000602082019050818103600083015261507281615036565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60006150b3826134fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036150e5576150e4614858565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061512a826134fa565b9150615135836134fa565b925082615145576151446150f0565b5b828204905092915050565b600061515b826134fa565b9150615166836134fa565b925082615176576151756150f0565b5b82820690509291505056fea26469706673582212207ccb59e737a87c021f387f6add14fb5da3a2a49106c681effb81d61c6d56a13464736f6c634300080f0033",
}

// BaliolaSeriesABI is the input ABI used to generate the binding from.
// Deprecated: Use BaliolaSeriesMetaData.ABI instead.
var BaliolaSeriesABI = BaliolaSeriesMetaData.ABI

// BaliolaSeriesBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use BaliolaSeriesMetaData.Bin instead.
var BaliolaSeriesBin = BaliolaSeriesMetaData.Bin

// DeployBaliolaSeries deploys a new Ethereum contract, binding an instance of BaliolaSeries to it.
func DeployBaliolaSeries(auth *bind.TransactOpts, backend bind.ContractBackend, name string, symbol string) (common.Address, *types.Transaction, *BaliolaSeries, error) {
	parsed, err := BaliolaSeriesMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(BaliolaSeriesBin), backend, name, symbol)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaliolaSeries{BaliolaSeriesCaller: BaliolaSeriesCaller{contract: contract}, BaliolaSeriesTransactor: BaliolaSeriesTransactor{contract: contract}, BaliolaSeriesFilterer: BaliolaSeriesFilterer{contract: contract}}, nil
}

// BaliolaSeries is an auto generated Go binding around an Ethereum contract.
type BaliolaSeries struct {
	BaliolaSeriesCaller     // Read-only binding to the contract
	BaliolaSeriesTransactor // Write-only binding to the contract
	BaliolaSeriesFilterer   // Log filterer for contract events
}

// BaliolaSeriesCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaliolaSeriesCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaliolaSeriesTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaliolaSeriesTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaliolaSeriesFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaliolaSeriesFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaliolaSeriesSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaliolaSeriesSession struct {
	Contract     *BaliolaSeries    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaliolaSeriesCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaliolaSeriesCallerSession struct {
	Contract *BaliolaSeriesCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// BaliolaSeriesTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaliolaSeriesTransactorSession struct {
	Contract     *BaliolaSeriesTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// BaliolaSeriesRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaliolaSeriesRaw struct {
	Contract *BaliolaSeries // Generic contract binding to access the raw methods on
}

// BaliolaSeriesCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaliolaSeriesCallerRaw struct {
	Contract *BaliolaSeriesCaller // Generic read-only contract binding to access the raw methods on
}

// BaliolaSeriesTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaliolaSeriesTransactorRaw struct {
	Contract *BaliolaSeriesTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaliolaSeries creates a new instance of BaliolaSeries, bound to a specific deployed contract.
func NewBaliolaSeries(address common.Address, backend bind.ContractBackend) (*BaliolaSeries, error) {
	contract, err := bindBaliolaSeries(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeries{BaliolaSeriesCaller: BaliolaSeriesCaller{contract: contract}, BaliolaSeriesTransactor: BaliolaSeriesTransactor{contract: contract}, BaliolaSeriesFilterer: BaliolaSeriesFilterer{contract: contract}}, nil
}

// NewBaliolaSeriesCaller creates a new read-only instance of BaliolaSeries, bound to a specific deployed contract.
func NewBaliolaSeriesCaller(address common.Address, caller bind.ContractCaller) (*BaliolaSeriesCaller, error) {
	contract, err := bindBaliolaSeries(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesCaller{contract: contract}, nil
}

// NewBaliolaSeriesTransactor creates a new write-only instance of BaliolaSeries, bound to a specific deployed contract.
func NewBaliolaSeriesTransactor(address common.Address, transactor bind.ContractTransactor) (*BaliolaSeriesTransactor, error) {
	contract, err := bindBaliolaSeries(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesTransactor{contract: contract}, nil
}

// NewBaliolaSeriesFilterer creates a new log filterer instance of BaliolaSeries, bound to a specific deployed contract.
func NewBaliolaSeriesFilterer(address common.Address, filterer bind.ContractFilterer) (*BaliolaSeriesFilterer, error) {
	contract, err := bindBaliolaSeries(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesFilterer{contract: contract}, nil
}

// bindBaliolaSeries binds a generic wrapper to an already deployed contract.
func bindBaliolaSeries(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaliolaSeriesABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaliolaSeries *BaliolaSeriesRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BaliolaSeries.Contract.BaliolaSeriesCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaliolaSeries *BaliolaSeriesRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.BaliolaSeriesTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaliolaSeries *BaliolaSeriesRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.BaliolaSeriesTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaliolaSeries *BaliolaSeriesCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BaliolaSeries.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaliolaSeries *BaliolaSeriesTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaliolaSeries *BaliolaSeriesTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.contract.Transact(opts, method, params...)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _BaliolaSeries.Contract.DEFAULTADMINROLE(&_BaliolaSeries.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _BaliolaSeries.Contract.DEFAULTADMINROLE(&_BaliolaSeries.CallOpts)
}

// MINTERROLE is a free data retrieval call binding the contract method 0xd5391393.
//
// Solidity: function MINTER_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCaller) MINTERROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "MINTER_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// MINTERROLE is a free data retrieval call binding the contract method 0xd5391393.
//
// Solidity: function MINTER_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesSession) MINTERROLE() ([32]byte, error) {
	return _BaliolaSeries.Contract.MINTERROLE(&_BaliolaSeries.CallOpts)
}

// MINTERROLE is a free data retrieval call binding the contract method 0xd5391393.
//
// Solidity: function MINTER_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCallerSession) MINTERROLE() ([32]byte, error) {
	return _BaliolaSeries.Contract.MINTERROLE(&_BaliolaSeries.CallOpts)
}

// PAUSERROLE is a free data retrieval call binding the contract method 0xe63ab1e9.
//
// Solidity: function PAUSER_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCaller) PAUSERROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "PAUSER_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PAUSERROLE is a free data retrieval call binding the contract method 0xe63ab1e9.
//
// Solidity: function PAUSER_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesSession) PAUSERROLE() ([32]byte, error) {
	return _BaliolaSeries.Contract.PAUSERROLE(&_BaliolaSeries.CallOpts)
}

// PAUSERROLE is a free data retrieval call binding the contract method 0xe63ab1e9.
//
// Solidity: function PAUSER_ROLE() view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCallerSession) PAUSERROLE() ([32]byte, error) {
	return _BaliolaSeries.Contract.PAUSERROLE(&_BaliolaSeries.CallOpts)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCaller) BalanceOf(opts *bind.CallOpts, owner common.Address) (*big.Int, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "balanceOf", owner)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _BaliolaSeries.Contract.BalanceOf(&_BaliolaSeries.CallOpts, owner)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCallerSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _BaliolaSeries.Contract.BalanceOf(&_BaliolaSeries.CallOpts, owner)
}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_BaliolaSeries *BaliolaSeriesCaller) GetApproved(opts *bind.CallOpts, tokenId *big.Int) (common.Address, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "getApproved", tokenId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_BaliolaSeries *BaliolaSeriesSession) GetApproved(tokenId *big.Int) (common.Address, error) {
	return _BaliolaSeries.Contract.GetApproved(&_BaliolaSeries.CallOpts, tokenId)
}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_BaliolaSeries *BaliolaSeriesCallerSession) GetApproved(tokenId *big.Int) (common.Address, error) {
	return _BaliolaSeries.Contract.GetApproved(&_BaliolaSeries.CallOpts, tokenId)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _BaliolaSeries.Contract.GetRoleAdmin(&_BaliolaSeries.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_BaliolaSeries *BaliolaSeriesCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _BaliolaSeries.Contract.GetRoleAdmin(&_BaliolaSeries.CallOpts, role)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_BaliolaSeries *BaliolaSeriesCaller) GetRoleMember(opts *bind.CallOpts, role [32]byte, index *big.Int) (common.Address, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "getRoleMember", role, index)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_BaliolaSeries *BaliolaSeriesSession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _BaliolaSeries.Contract.GetRoleMember(&_BaliolaSeries.CallOpts, role, index)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_BaliolaSeries *BaliolaSeriesCallerSession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _BaliolaSeries.Contract.GetRoleMember(&_BaliolaSeries.CallOpts, role, index)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCaller) GetRoleMemberCount(opts *bind.CallOpts, role [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "getRoleMemberCount", role)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesSession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _BaliolaSeries.Contract.GetRoleMemberCount(&_BaliolaSeries.CallOpts, role)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCallerSession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _BaliolaSeries.Contract.GetRoleMemberCount(&_BaliolaSeries.CallOpts, role)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _BaliolaSeries.Contract.HasRole(&_BaliolaSeries.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _BaliolaSeries.Contract.HasRole(&_BaliolaSeries.CallOpts, role, account)
}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCaller) IsApprovedForAll(opts *bind.CallOpts, owner common.Address, operator common.Address) (bool, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "isApprovedForAll", owner, operator)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesSession) IsApprovedForAll(owner common.Address, operator common.Address) (bool, error) {
	return _BaliolaSeries.Contract.IsApprovedForAll(&_BaliolaSeries.CallOpts, owner, operator)
}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCallerSession) IsApprovedForAll(owner common.Address, operator common.Address) (bool, error) {
	return _BaliolaSeries.Contract.IsApprovedForAll(&_BaliolaSeries.CallOpts, owner, operator)
}

// MintPrice is a free data retrieval call binding the contract method 0x6817c76c.
//
// Solidity: function mintPrice() view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCaller) MintPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "mintPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MintPrice is a free data retrieval call binding the contract method 0x6817c76c.
//
// Solidity: function mintPrice() view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesSession) MintPrice() (*big.Int, error) {
	return _BaliolaSeries.Contract.MintPrice(&_BaliolaSeries.CallOpts)
}

// MintPrice is a free data retrieval call binding the contract method 0x6817c76c.
//
// Solidity: function mintPrice() view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCallerSession) MintPrice() (*big.Int, error) {
	return _BaliolaSeries.Contract.MintPrice(&_BaliolaSeries.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_BaliolaSeries *BaliolaSeriesCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_BaliolaSeries *BaliolaSeriesSession) Name() (string, error) {
	return _BaliolaSeries.Contract.Name(&_BaliolaSeries.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_BaliolaSeries *BaliolaSeriesCallerSession) Name() (string, error) {
	return _BaliolaSeries.Contract.Name(&_BaliolaSeries.CallOpts)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_BaliolaSeries *BaliolaSeriesCaller) OwnerOf(opts *bind.CallOpts, tokenId *big.Int) (common.Address, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "ownerOf", tokenId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_BaliolaSeries *BaliolaSeriesSession) OwnerOf(tokenId *big.Int) (common.Address, error) {
	return _BaliolaSeries.Contract.OwnerOf(&_BaliolaSeries.CallOpts, tokenId)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_BaliolaSeries *BaliolaSeriesCallerSession) OwnerOf(tokenId *big.Int) (common.Address, error) {
	return _BaliolaSeries.Contract.OwnerOf(&_BaliolaSeries.CallOpts, tokenId)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCaller) Paused(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "paused")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_BaliolaSeries *BaliolaSeriesSession) Paused() (bool, error) {
	return _BaliolaSeries.Contract.Paused(&_BaliolaSeries.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCallerSession) Paused() (bool, error) {
	return _BaliolaSeries.Contract.Paused(&_BaliolaSeries.CallOpts)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _BaliolaSeries.Contract.SupportsInterface(&_BaliolaSeries.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_BaliolaSeries *BaliolaSeriesCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _BaliolaSeries.Contract.SupportsInterface(&_BaliolaSeries.CallOpts, interfaceId)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_BaliolaSeries *BaliolaSeriesCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_BaliolaSeries *BaliolaSeriesSession) Symbol() (string, error) {
	return _BaliolaSeries.Contract.Symbol(&_BaliolaSeries.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_BaliolaSeries *BaliolaSeriesCallerSession) Symbol() (string, error) {
	return _BaliolaSeries.Contract.Symbol(&_BaliolaSeries.CallOpts)
}

// TokenByIndex is a free data retrieval call binding the contract method 0x4f6ccce7.
//
// Solidity: function tokenByIndex(uint256 index) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCaller) TokenByIndex(opts *bind.CallOpts, index *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "tokenByIndex", index)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TokenByIndex is a free data retrieval call binding the contract method 0x4f6ccce7.
//
// Solidity: function tokenByIndex(uint256 index) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesSession) TokenByIndex(index *big.Int) (*big.Int, error) {
	return _BaliolaSeries.Contract.TokenByIndex(&_BaliolaSeries.CallOpts, index)
}

// TokenByIndex is a free data retrieval call binding the contract method 0x4f6ccce7.
//
// Solidity: function tokenByIndex(uint256 index) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCallerSession) TokenByIndex(index *big.Int) (*big.Int, error) {
	return _BaliolaSeries.Contract.TokenByIndex(&_BaliolaSeries.CallOpts, index)
}

// TokenOfOwnerByIndex is a free data retrieval call binding the contract method 0x2f745c59.
//
// Solidity: function tokenOfOwnerByIndex(address owner, uint256 index) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCaller) TokenOfOwnerByIndex(opts *bind.CallOpts, owner common.Address, index *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "tokenOfOwnerByIndex", owner, index)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TokenOfOwnerByIndex is a free data retrieval call binding the contract method 0x2f745c59.
//
// Solidity: function tokenOfOwnerByIndex(address owner, uint256 index) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesSession) TokenOfOwnerByIndex(owner common.Address, index *big.Int) (*big.Int, error) {
	return _BaliolaSeries.Contract.TokenOfOwnerByIndex(&_BaliolaSeries.CallOpts, owner, index)
}

// TokenOfOwnerByIndex is a free data retrieval call binding the contract method 0x2f745c59.
//
// Solidity: function tokenOfOwnerByIndex(address owner, uint256 index) view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCallerSession) TokenOfOwnerByIndex(owner common.Address, index *big.Int) (*big.Int, error) {
	return _BaliolaSeries.Contract.TokenOfOwnerByIndex(&_BaliolaSeries.CallOpts, owner, index)
}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_BaliolaSeries *BaliolaSeriesCaller) TokenURI(opts *bind.CallOpts, tokenId *big.Int) (string, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "tokenURI", tokenId)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_BaliolaSeries *BaliolaSeriesSession) TokenURI(tokenId *big.Int) (string, error) {
	return _BaliolaSeries.Contract.TokenURI(&_BaliolaSeries.CallOpts, tokenId)
}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_BaliolaSeries *BaliolaSeriesCallerSession) TokenURI(tokenId *big.Int) (string, error) {
	return _BaliolaSeries.Contract.TokenURI(&_BaliolaSeries.CallOpts, tokenId)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _BaliolaSeries.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesSession) TotalSupply() (*big.Int, error) {
	return _BaliolaSeries.Contract.TotalSupply(&_BaliolaSeries.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_BaliolaSeries *BaliolaSeriesCallerSession) TotalSupply() (*big.Int, error) {
	return _BaliolaSeries.Contract.TotalSupply(&_BaliolaSeries.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) Approve(opts *bind.TransactOpts, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "approve", to, tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesSession) Approve(to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Approve(&_BaliolaSeries.TransactOpts, to, tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) Approve(to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Approve(&_BaliolaSeries.TransactOpts, to, tokenId)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) Burn(opts *bind.TransactOpts, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "burn", tokenId)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesSession) Burn(tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Burn(&_BaliolaSeries.TransactOpts, tokenId)
}

// Burn is a paid mutator transaction binding the contract method 0x42966c68.
//
// Solidity: function burn(uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) Burn(tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Burn(&_BaliolaSeries.TransactOpts, tokenId)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.GrantRole(&_BaliolaSeries.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.GrantRole(&_BaliolaSeries.TransactOpts, role, account)
}

// Mint is a paid mutator transaction binding the contract method 0x1c351a9d.
//
// Solidity: function mint(string _uri, address _to) payable returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) Mint(opts *bind.TransactOpts, _uri string, _to common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "mint", _uri, _to)
}

// Mint is a paid mutator transaction binding the contract method 0x1c351a9d.
//
// Solidity: function mint(string _uri, address _to) payable returns()
func (_BaliolaSeries *BaliolaSeriesSession) Mint(_uri string, _to common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Mint(&_BaliolaSeries.TransactOpts, _uri, _to)
}

// Mint is a paid mutator transaction binding the contract method 0x1c351a9d.
//
// Solidity: function mint(string _uri, address _to) payable returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) Mint(_uri string, _to common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Mint(&_BaliolaSeries.TransactOpts, _uri, _to)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) Pause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "pause")
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_BaliolaSeries *BaliolaSeriesSession) Pause() (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Pause(&_BaliolaSeries.TransactOpts)
}

// Pause is a paid mutator transaction binding the contract method 0x8456cb59.
//
// Solidity: function pause() returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) Pause() (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Pause(&_BaliolaSeries.TransactOpts)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.RenounceRole(&_BaliolaSeries.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.RenounceRole(&_BaliolaSeries.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.RevokeRole(&_BaliolaSeries.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.RevokeRole(&_BaliolaSeries.TransactOpts, role, account)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) SafeTransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "safeTransferFrom", from, to, tokenId)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesSession) SafeTransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SafeTransferFrom(&_BaliolaSeries.TransactOpts, from, to, tokenId)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) SafeTransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SafeTransferFrom(&_BaliolaSeries.TransactOpts, from, to, tokenId)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) SafeTransferFrom0(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int, _data []byte) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "safeTransferFrom0", from, to, tokenId, _data)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) returns()
func (_BaliolaSeries *BaliolaSeriesSession) SafeTransferFrom0(from common.Address, to common.Address, tokenId *big.Int, _data []byte) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SafeTransferFrom0(&_BaliolaSeries.TransactOpts, from, to, tokenId, _data)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) SafeTransferFrom0(from common.Address, to common.Address, tokenId *big.Int, _data []byte) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SafeTransferFrom0(&_BaliolaSeries.TransactOpts, from, to, tokenId, _data)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) SetApprovalForAll(opts *bind.TransactOpts, operator common.Address, approved bool) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "setApprovalForAll", operator, approved)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_BaliolaSeries *BaliolaSeriesSession) SetApprovalForAll(operator common.Address, approved bool) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SetApprovalForAll(&_BaliolaSeries.TransactOpts, operator, approved)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) SetApprovalForAll(operator common.Address, approved bool) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SetApprovalForAll(&_BaliolaSeries.TransactOpts, operator, approved)
}

// SetTokenURI is a paid mutator transaction binding the contract method 0x162094c4.
//
// Solidity: function setTokenURI(uint256 tokenId, string URI) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) SetTokenURI(opts *bind.TransactOpts, tokenId *big.Int, URI string) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "setTokenURI", tokenId, URI)
}

// SetTokenURI is a paid mutator transaction binding the contract method 0x162094c4.
//
// Solidity: function setTokenURI(uint256 tokenId, string URI) returns()
func (_BaliolaSeries *BaliolaSeriesSession) SetTokenURI(tokenId *big.Int, URI string) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SetTokenURI(&_BaliolaSeries.TransactOpts, tokenId, URI)
}

// SetTokenURI is a paid mutator transaction binding the contract method 0x162094c4.
//
// Solidity: function setTokenURI(uint256 tokenId, string URI) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) SetTokenURI(tokenId *big.Int, URI string) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.SetTokenURI(&_BaliolaSeries.TransactOpts, tokenId, URI)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "transferFrom", from, to, tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesSession) TransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.TransferFrom(&_BaliolaSeries.TransactOpts, from, to, tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) TransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _BaliolaSeries.Contract.TransferFrom(&_BaliolaSeries.TransactOpts, from, to, tokenId)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_BaliolaSeries *BaliolaSeriesTransactor) Unpause(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaliolaSeries.contract.Transact(opts, "unpause")
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_BaliolaSeries *BaliolaSeriesSession) Unpause() (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Unpause(&_BaliolaSeries.TransactOpts)
}

// Unpause is a paid mutator transaction binding the contract method 0x3f4ba83a.
//
// Solidity: function unpause() returns()
func (_BaliolaSeries *BaliolaSeriesTransactorSession) Unpause() (*types.Transaction, error) {
	return _BaliolaSeries.Contract.Unpause(&_BaliolaSeries.TransactOpts)
}

// BaliolaSeriesApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the BaliolaSeries contract.
type BaliolaSeriesApprovalIterator struct {
	Event *BaliolaSeriesApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesApproval represents a Approval event raised by the BaliolaSeries contract.
type BaliolaSeriesApproval struct {
	Owner    common.Address
	Approved common.Address
	TokenId  *big.Int
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, approved []common.Address, tokenId []*big.Int) (*BaliolaSeriesApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var approvedRule []interface{}
	for _, approvedItem := range approved {
		approvedRule = append(approvedRule, approvedItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "Approval", ownerRule, approvedRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesApprovalIterator{contract: _BaliolaSeries.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesApproval, owner []common.Address, approved []common.Address, tokenId []*big.Int) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var approvedRule []interface{}
	for _, approvedItem := range approved {
		approvedRule = append(approvedRule, approvedItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "Approval", ownerRule, approvedRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesApproval)
				if err := _BaliolaSeries.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParseApproval(log types.Log) (*BaliolaSeriesApproval, error) {
	event := new(BaliolaSeriesApproval)
	if err := _BaliolaSeries.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BaliolaSeriesApprovalForAllIterator is returned from FilterApprovalForAll and is used to iterate over the raw logs and unpacked data for ApprovalForAll events raised by the BaliolaSeries contract.
type BaliolaSeriesApprovalForAllIterator struct {
	Event *BaliolaSeriesApprovalForAll // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesApprovalForAllIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesApprovalForAll)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesApprovalForAll)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesApprovalForAllIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesApprovalForAllIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesApprovalForAll represents a ApprovalForAll event raised by the BaliolaSeries contract.
type BaliolaSeriesApprovalForAll struct {
	Owner    common.Address
	Operator common.Address
	Approved bool
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterApprovalForAll is a free log retrieval operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterApprovalForAll(opts *bind.FilterOpts, owner []common.Address, operator []common.Address) (*BaliolaSeriesApprovalForAllIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "ApprovalForAll", ownerRule, operatorRule)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesApprovalForAllIterator{contract: _BaliolaSeries.contract, event: "ApprovalForAll", logs: logs, sub: sub}, nil
}

// WatchApprovalForAll is a free log subscription operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchApprovalForAll(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesApprovalForAll, owner []common.Address, operator []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "ApprovalForAll", ownerRule, operatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesApprovalForAll)
				if err := _BaliolaSeries.contract.UnpackLog(event, "ApprovalForAll", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApprovalForAll is a log parse operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParseApprovalForAll(log types.Log) (*BaliolaSeriesApprovalForAll, error) {
	event := new(BaliolaSeriesApprovalForAll)
	if err := _BaliolaSeries.contract.UnpackLog(event, "ApprovalForAll", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BaliolaSeriesPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the BaliolaSeries contract.
type BaliolaSeriesPausedIterator struct {
	Event *BaliolaSeriesPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesPaused represents a Paused event raised by the BaliolaSeries contract.
type BaliolaSeriesPaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterPaused(opts *bind.FilterOpts) (*BaliolaSeriesPausedIterator, error) {

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesPausedIterator{contract: _BaliolaSeries.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesPaused) (event.Subscription, error) {

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesPaused)
				if err := _BaliolaSeries.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParsePaused(log types.Log) (*BaliolaSeriesPaused, error) {
	event := new(BaliolaSeriesPaused)
	if err := _BaliolaSeries.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BaliolaSeriesRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the BaliolaSeries contract.
type BaliolaSeriesRoleAdminChangedIterator struct {
	Event *BaliolaSeriesRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesRoleAdminChanged represents a RoleAdminChanged event raised by the BaliolaSeries contract.
type BaliolaSeriesRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*BaliolaSeriesRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesRoleAdminChangedIterator{contract: _BaliolaSeries.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesRoleAdminChanged)
				if err := _BaliolaSeries.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParseRoleAdminChanged(log types.Log) (*BaliolaSeriesRoleAdminChanged, error) {
	event := new(BaliolaSeriesRoleAdminChanged)
	if err := _BaliolaSeries.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BaliolaSeriesRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the BaliolaSeries contract.
type BaliolaSeriesRoleGrantedIterator struct {
	Event *BaliolaSeriesRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesRoleGranted represents a RoleGranted event raised by the BaliolaSeries contract.
type BaliolaSeriesRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*BaliolaSeriesRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesRoleGrantedIterator{contract: _BaliolaSeries.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesRoleGranted)
				if err := _BaliolaSeries.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParseRoleGranted(log types.Log) (*BaliolaSeriesRoleGranted, error) {
	event := new(BaliolaSeriesRoleGranted)
	if err := _BaliolaSeries.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BaliolaSeriesRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the BaliolaSeries contract.
type BaliolaSeriesRoleRevokedIterator struct {
	Event *BaliolaSeriesRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesRoleRevoked represents a RoleRevoked event raised by the BaliolaSeries contract.
type BaliolaSeriesRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*BaliolaSeriesRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesRoleRevokedIterator{contract: _BaliolaSeries.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesRoleRevoked)
				if err := _BaliolaSeries.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParseRoleRevoked(log types.Log) (*BaliolaSeriesRoleRevoked, error) {
	event := new(BaliolaSeriesRoleRevoked)
	if err := _BaliolaSeries.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BaliolaSeriesTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the BaliolaSeries contract.
type BaliolaSeriesTransferIterator struct {
	Event *BaliolaSeriesTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesTransfer represents a Transfer event raised by the BaliolaSeries contract.
type BaliolaSeriesTransfer struct {
	From    common.Address
	To      common.Address
	TokenId *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address, tokenId []*big.Int) (*BaliolaSeriesTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "Transfer", fromRule, toRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesTransferIterator{contract: _BaliolaSeries.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesTransfer, from []common.Address, to []common.Address, tokenId []*big.Int) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "Transfer", fromRule, toRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesTransfer)
				if err := _BaliolaSeries.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParseTransfer(log types.Log) (*BaliolaSeriesTransfer, error) {
	event := new(BaliolaSeriesTransfer)
	if err := _BaliolaSeries.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BaliolaSeriesUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the BaliolaSeries contract.
type BaliolaSeriesUnpausedIterator struct {
	Event *BaliolaSeriesUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaliolaSeriesUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaliolaSeriesUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaliolaSeriesUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaliolaSeriesUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaliolaSeriesUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaliolaSeriesUnpaused represents a Unpaused event raised by the BaliolaSeries contract.
type BaliolaSeriesUnpaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_BaliolaSeries *BaliolaSeriesFilterer) FilterUnpaused(opts *bind.FilterOpts) (*BaliolaSeriesUnpausedIterator, error) {

	logs, sub, err := _BaliolaSeries.contract.FilterLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return &BaliolaSeriesUnpausedIterator{contract: _BaliolaSeries.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_BaliolaSeries *BaliolaSeriesFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *BaliolaSeriesUnpaused) (event.Subscription, error) {

	logs, sub, err := _BaliolaSeries.contract.WatchLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaliolaSeriesUnpaused)
				if err := _BaliolaSeries.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_BaliolaSeries *BaliolaSeriesFilterer) ParseUnpaused(log types.Log) (*BaliolaSeriesUnpaused, error) {
	event := new(BaliolaSeriesUnpaused)
	if err := _BaliolaSeries.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
