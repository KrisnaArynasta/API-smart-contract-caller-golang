on:
  push:
    branches:
      - master
name: 🚀 Deploy website on push
jobs:
  web-deploy:
    name: 🎉 Deploy
    runs-on: ubuntu-latest
    concurrency: master
    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v2

      - name: 📂 Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: vmi875062.contaboserver.net
          port: 21
          protocol: ftp
          username: betamax_betamax_apitestnet
          password: ${{ secrets.DEPLOY_STAGING_KEY }}
          server-dir: ./public_html/   

      - name: Build Go File
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOSTS }}
          port: ${{ secrets.SSH_PORT }}
          username: betamax
          password: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/betamax/web/api-staging.betamax.co/public_html
            /usr/local/go/bin/go build
        env:
          CI: true

      - name: Run PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOSTS }}
          port: ${{ secrets.SSH_PORT }}
          username: betamax
          password: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            pm2 stop api-betamax-smartcontract
            pm2 start smartContractAPI --name "api-betamax-smartcontract"
        env:
          CI: true

      # go build home/betamax/web/api-staging.betamax.co/public_html/SmartContractAPI.go
      # - name: ⚙️ Set up SSH
      #   run: |
      #     mkdir -p ~/.ssh/
      #     echo "$SSH_PRIVATE_KEY" > ./deploy.key
      #     sudo chmod 600 ./deploy.key
      #     echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      #   shell: bash
      #   env:
      #     SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
      #     SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}

      # - name: 🔧 Install PM2
      #   run: npm i pm2

      # - name: 💡 Deploy
      #   run: env $(cat .env | grep -v \"#\" | xargs) pm2 deploy ecosystem.config.js staging
      #   # Or alternately, put this deploy script in your package.json's scripts and run it using yarn/npm:
      #   # run: yarn deploy